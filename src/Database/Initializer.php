<?php
namespace HurahCli\Database;

use Composer\Command\BaseCommand;
use Hi\Helpers\DirectoryStructure;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\ArrayInput;
use HurahCli\Database\Initializer\NoDomains;

class Initializer extends BaseCommand
{
    protected function configure()
    {
        $this->setName("novum:db-init");
        $this->setDescription('Creates a new database, user and initializes schema\'s based on schema.xml');
        $this->addArgument('domain', InputArgument::IS_ARRAY | InputArgument::OPTIONAL, 'domain to install');
    }
    protected function initialize(InputInterface $input, OutputInterface $output)
    {
        parent::initialize($input, $output); // TODO: Change the autogenerated stub
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $oDirectoryStructure = new DirectoryStructure();
        $aDomains = $oDirectoryStructure->getDomainCollection();

        $aSelectedDomains = $input->getArgument('domain');
print_r($aSelectedDomains);

        if(empty($aDomains))
        {
            $this->noDomainsMassage($output);
            return;
        }
        else if(empty($aSelectedDomains))
        {
            $output->writeln("<warning>No domain selected</warning>");
            $output->writeln("Databases are bound to a domain, you must first install or create a domain");
        }
    }
    private function noDomainsMassage(OutputInterface $output)
    {
        $output->writeln("<warning>No databases available to initialize</warning>");
        $output->writeln("Databases are bound to a domain, you must first install or create a domain");
        $output->writeln("Here are some domain packages you could install:");
        $sHr = "---------------------------------------";
        $output->writeln($sHr);
        $command = $this->getApplication()->find('search');
        $arguments = [
            '--type'    =>  'novum-domain',
            'tokens'  => ['novum']
        ];

        $searchInput = new ArrayInput($arguments);
        $returnCode = $command->run($searchInput, $output);
        $output->writeln($sHr);
        //  composer search --type='novum-domain' novum
        $output->writeln("<info>Installing is as easy as typing \"composer require <vendor/package>\"</info>");
        $output->writeln("<info>For example \"composer require novum/domain-svb\"</info>");

    }

}
